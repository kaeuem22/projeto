generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model endereco {
  id              Int            @id @default(autoincrement())
  cep             String         @db.VarChar(255)
  cidade          String         @db.VarChar(255)
  logradouro      String         @db.VarChar(255)
  bairro          String         @db.VarChar(255)
  numero          String         @db.VarChar(255)
  complemento     String         @db.VarChar(255)
  datacriacao     DateTime       @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime       @default(now()) @db.Timestamp(0)
  universidade    universidade[]
}

model curso {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(255)
  universidade_id Int?
  datacriacao     DateTime    @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime    @default(now()) @db.Timestamp(0)
  turma           turma[]
  disciplina           disciplina[]
  
  universidade    universidade? @relation(fields: [universidade_id], references: [id], onDelete: Cascade, map: "fk_curso_universidade")
  @@index([universidade_id], map: "fk_curso_universidade")
}

model universidade {
  id              Int      @id @default(autoincrement())
  razao           String   @db.VarChar(255)
  fantasia        String   @db.VarChar(255)
  endereco_id     Int
  datacriacao     DateTime @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime @default(now()) @db.Timestamp(0)
  curso           curso[]
  
  endereco        endereco @relation(fields: [endereco_id], references: [id], onDelete: Cascade, map: "fk_universidade_endereco")

  @@index([endereco_id], map: "fk_universidade_endereco")
}

model usuario {
  id              Int         @id @default(autoincrement())
  nome            String      @db.VarChar(255)
  cpf             String?     @db.VarChar(255)
  apelido         String?     @db.VarChar(255)
  email           String      @db.VarChar(255)
  password        String      @db.VarChar(255)
  datacriacao     DateTime    @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime    @default(now()) @db.Timestamp(0)
  professor       professor[]
  aluno           aluno[]
  usuario_permissao     usuario_permissao[]
}

model professor {
  id              Int      @id @default(autoincrement())
  usuario_id      Int
  datacriacao     DateTime @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime @default(now()) @db.Timestamp(0)
  usuario         usuario  @relation(fields: [usuario_id], references: [id], onDelete: Cascade, map: "fk_professor_usuario")
  disciplina           disciplina[]

  @@index([usuario_id], map: "fk_professor_usuario")

}

model aluno {
  id              Int      @id @default(autoincrement())
  usuario_id      Int
  datacriacao     DateTime @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime @default(now()) @db.Timestamp(0)
  usuario         usuario  @relation(fields: [usuario_id], references: [id], onDelete: Cascade, map: "fk_aluno_usuario")
  disciplina_aluno     disciplina_aluno[]

  @@index([usuario_id], map: "fk_aluno_usuario")

}

model disciplina {
  id              Int       @id @default(autoincrement())
  nome            String    @db.VarChar(255)
  dia_semana      String    @db.VarChar(255)
  curso_id        Int
  professor_id    Int
  datacriacao     DateTime  @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime  @default(now()) @db.Timestamp(0)
  curso           curso     @relation(fields: [curso_id], references: [id], onDelete: Cascade, map: "fk_disciplina_curso")
  professor       professor @relation(fields: [professor_id], references: [id], onDelete: Cascade, map: "fk_disciplina_professor")
  disciplina_aluno     disciplina_aluno[]

  @@index([curso_id], map: "fk_disciplina_curso")
  @@index([professor_id], map: "fk_disciplina_professor")
}

model disciplina_aluno {
  id              Int      @id @default(autoincrement())
  aluno_id        Int
  disciplina_id   Int
  datacriacao     DateTime @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime @default(now()) @db.Timestamp(0)
  aluno                aluno @relation(fields: [aluno_id], references: [id], onDelete: Cascade, map: "fk_disciplina_aluno_aluno")
  disciplina           disciplina @relation(fields: [disciplina_id], references: [id], onDelete: Cascade, map: "fk_disciplina_aluno_disciplina")

  @@index([aluno_id], map: "fk_disciplina_aluno_aluno")
  @@index([disciplina_id], map: "fk_disciplina_aluno_curso")
}

model turma {
  id              Int       @id @default(autoincrement())
  nome            String    @db.VarChar(255)
  curso_id        Int
  datacriacao     DateTime  @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime  @default(now()) @db.Timestamp(0)
  curso           curso     @relation(fields: [curso_id], references: [id], onDelete: Cascade, map: "fk_turma_curso")
 
  @@index([curso_id], map: "fk_turma_curso")
}


model permissao {
  id              Int       @id @default(autoincrement())
  nome            String    @db.VarChar(255)
  datacriacao     DateTime  @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime  @default(now()) @db.Timestamp(0)
  usuario_permissao     usuario_permissao[]
}

model usuario_permissao {
  id              Int      @id @default(autoincrement())
  usuario_id      Int
  permissao_id   Int
  datacriacao     DateTime @default(now()) @db.Timestamp(0)
  dataatualizacao DateTime @default(now()) @db.Timestamp(0)
  usuario         usuario  @relation(fields: [usuario_id], references: [id], onDelete: Cascade, map: "fk_usuario_permissao_usuario")
  permissao           permissao @relation(fields: [permissao_id], references: [id], onDelete: Cascade, map: "fk_usuario_permissao _permissao")

  @@index([usuario_id], map: "fk_usuario_permissao_usuario")
  @@index([permissao_id], map: "fk_usuario_permissao_permissao")
}

